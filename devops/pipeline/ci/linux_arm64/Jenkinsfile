def version

pipeline {
    environment {
        MAILTO_ON_FAIL     = "n.zoltan18@gmail.com"

        NAME               = "cps-npmrc-manager"
        ROOT               = "."

        JDK_TOOL           = "graalvm-17"
        MVN_TOOL           = "maven-3.9.4"
    }

    agent {
        label 'linux_arm64'
    }

    options {
        disableConcurrentBuilds()
        buildDiscarder(logRotator(numToKeepStr: '10'))
    }

    stages {
        stage ('preparation') {
            steps {
                deleteDir()
                checkout scm
                script {
                    String snapshotVersion = readMavenPom(file: "${env.ROOT}/pom.xml").getVersion()
                    version = snapshotVersion.split("-SNAPSHOT")[0]
                }
            }
        }

        stage ('maven build') {
            steps {
                withMaven(maven: env.MVN_TOOL, jdk: env.JDK_TOOL) {
                    sh "mvn -Pnative -f ${env.ROOT}/pom.xml clean package"
                }
            }
        }

        stage ('package executable') {
            steps {
                script {
                    def tarName = "${env.NAME}_linux_arm64_${version}.tar.gz"
                    tar(archive: true, compress: true, defaultExcludes: false, dir: "${env.ROOT}/target", exclude: '', file: tarName, glob: 'npmrcm', overwrite: false)
                }
            }
        }
    }

    post {
        failure {
            emailext(to: "${env.MAILTO_ON_FAIL}", subject: '$DEFAULT_SUBJECT', body: '$DEFAULT_CONTENT')
        }
    }
}